$(document).ready(function() {
    let token = localStorage.getItem('token');

    if (token) {
        showAccountSection();
    }

    // Handle login
    $('#login-form').submit(function(event) {
        event.preventDefault();
        const username = $('#username').val();
        const password = $('#password').val();

        $.ajax({
            url: '/api/auth/login',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ username, password }),
            success: function(response) {
                localStorage.setItem('token', response.token); // ‡πÄ‡∏Å‡πá‡∏ö JWT Token ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô localStorage
                token = response.token; // ‡πÉ‡∏ä‡πâ Token ‡πÉ‡∏´‡∏°‡πà
                showAccountSection(); // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
            },
            error: function() {
                $('#login-error').text('Invalid username or password');
            }
        });
    });

    // Handle register
    $('#register-form').submit(function(event) {
        event.preventDefault();
        const username = $('#register-username').val();
        const password = $('#register-password').val();

        $.ajax({
            url: '/api/auth/register',
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ username, password }),
            success: function() {
                alert('Registration successful! Please log in.');
                showLoginSection(); // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ login ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            },
            error: function(xhr) {
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö responseJSON ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
                let errorMessage = 'Registration failed';
                if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                }
                alert(errorMessage); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error ‡πÉ‡∏ô alert
            }
        });
    });

    // Handle logout
    $('#logout-btn').click(function() {
        localStorage.removeItem('token'); // ‡∏•‡∏ö JWT Token ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å localStorage
        token = null; // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ Token
        hideAccountSection(); // ‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    });

    // Handle deposit
    $('#deposit-form').submit(function(event) {
        event.preventDefault();
        const amount = $('#deposit-amount').val();
        const senderId = getSenderIdFromToken(); // ‡∏î‡∏∂‡∏á senderId ‡∏à‡∏≤‡∏Å token

        $.ajax({
            url: '/api/account/deposit',
            method: 'POST',
            headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
            contentType: 'application/json',
            data: JSON.stringify({ senderId, amount }),
            success: function(response) {
                $('#balance').text(response.balance); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
                alert('Deposit successful!');
            },
            error: function() {
                alert('Deposit failed');
            }
        });
    });

    // Handle withdraw
    $('#withdraw-form').submit(function(event) {
        event.preventDefault();
        const amount = $('#withdraw-amount').val();
        const senderId = getSenderIdFromToken(); // ‡∏î‡∏∂‡∏á senderId ‡∏à‡∏≤‡∏Å token

        $.ajax({
            url: '/api/account/withdraw',
            method: 'POST',
            headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
            contentType: 'application/json',
            data: JSON.stringify({ senderId, amount }),
            success: function(response) {
                $('#balance').text(response.balance); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
                alert('Withdraw successful!');
            },
            error: function() {
                alert('Withdraw failed');
            }
        });
    });

    // Handle transfer
    $('#transfer-form').submit(function(event) {
        event.preventDefault();
        const recipient = $('#transfer-username').val();
        const amount = $('#transfer-amount').val();
        const senderId = getSenderIdFromToken(); // ‡∏î‡∏∂‡∏á senderId ‡∏à‡∏≤‡∏Å token
    
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ
        if (recipient == senderId) {
            alert("You cannot transfer money to yourself.");
            return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà API
        }
    
        $.ajax({
            url: '/api/account/transfer',
            method: 'POST',
            headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
            contentType: 'application/json',
            data: JSON.stringify({ senderId, receiverId: parseInt(recipient), amount: parseFloat(amount) }),
            success: function(response) {
                $('#balance').text(response.senderBalance); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á
                alert('Transfer successful!');
            },
            error: function() {
                alert('Transfer failed');
            }
        });
    });
    

// Fetch balance, user profile, and transaction history
function showAccountSection() {
    $('#login-section').addClass('d-none');
    $('#account-section').removeClass('d-none');

    // Fetch user profile (Username and ID)
    $.ajax({
        url: '/api/account/profile',
        method: 'GET',
        headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
        success: function(response) {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ Username ‡πÅ‡∏•‡∏∞ UserId ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (response && response.username && response.userId) {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞ ID ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                $('#account-username').text(response.username);
                $('#account-id').text(response.userId);
            } else {
                alert('Failed to load user profile. Missing data.');
            }
        },
        error: function() {
            alert('Failed to load user profile.');
        }
    });

    // Fetch balance
    $.ajax({
        url: '/api/account/balance',
        method: 'GET',
        headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
        success: function(response) {
            $('#balance').text(response.balance); // ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô
        },
        error: function() {
            alert('Failed to load balance.');
        }
    });

    // Fetch transactions
    $.ajax({
        url: '/api/account/history',
        method: 'GET',
        headers: { Authorization: 'Bearer ' + token }, // ‡∏™‡πà‡∏á Token ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠
        success: function(transactions) {
            let tableBody = '';
            transactions.forEach(function(transaction) {
                const formattedDate = new Date(transaction.timestamp).toLocaleString();
                let typeClass = '';
                let typeIcon = '';
                let amountSign = '';
                let transactionParty = '';

                if (transaction.transactionType === 'Deposit') {
                    typeClass = 'text-success';
                    typeIcon = '‚¨ÜÔ∏è';
                    amountSign = '+';
                    transactionParty = `From: Bank`;
                } else if (transaction.transactionType === 'Withdraw') {
                    typeClass = 'text-danger';
                    typeIcon = '‚¨áÔ∏è';
                    amountSign = '-';
                    transactionParty = `To: Bank`;
                } else if (transaction.transactionType === 'Transfer') {
                    typeClass = 'text-warning';
                    typeIcon = 'üîÑ';
                    if (transaction.senderId == getSenderIdFromToken()) {
                        amountSign = '-';
                        transactionParty = `To: User ${transaction.receiverId}`;
                    } else {
                        amountSign = '+';
                        transactionParty = `From: User ${transaction.senderId}`;
                    }
                }

                tableBody += `
                    <tr>
                        <td>${formattedDate}</td>
                        <td class="${typeClass}">${typeIcon} ${transaction.transactionType}</td>
                        <td>${amountSign}${transaction.amount.toFixed(2)}</td>
                        <td>${transactionParty}</td>
                    </tr>
                `;
            });
            $('#transaction-history tbody').html(tableBody);
        },
        error: function() {
            alert('Failed to load transaction history.');
        }
    });

    }

    function hideAccountSection() {
        $('#login-section').removeClass('d-none');
        $('#account-section').addClass('d-none');
    }

    // Function to get senderId from JWT token
    function getSenderIdFromToken() {
        const payload = JSON.parse(atob(token.split('.')[1])); // ‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ payload ‡∏Ç‡∏≠‡∏á JWT token
        return payload.nameid; // senderId ‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô claim 'nameid'
    }

    // Switch between register and login sections
    $('#show-register-btn').click(function() {
        $('#login-section').addClass('d-none');
        $('#register-section').removeClass('d-none');
    });

    $('#show-login-btn').click(function() {
        $('#register-section').addClass('d-none');
        $('#login-section').removeClass('d-none');
    });

    function showLoginSection() {
        $('#register-section').addClass('d-none');
        $('#login-section').removeClass('d-none');
    }
});
